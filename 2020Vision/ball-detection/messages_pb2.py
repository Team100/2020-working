# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: robot-server/messages.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='robot-server/messages.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=b'\n\x1brobot-server/messages.proto\">\n\x08HighGoal\x12\x10\n\x08\x64istance\x18\x01 \x01(\x01\x12\x0f\n\x07v_angle\x18\x02 \x01(\x01\x12\x0f\n\x07h_angle\x18\x03 \x01(\x01\"1\n\nPowerCells\x12\x13\n\x0b\x63onfidences\x18\x01 \x03(\x01\x12\x0e\n\x06\x61ngles\x18\x02 \x03(\x01\x62\x06proto3'
)




_HIGHGOAL = _descriptor.Descriptor(
  name='HighGoal',
  full_name='HighGoal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='distance', full_name='HighGoal.distance', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='v_angle', full_name='HighGoal.v_angle', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='h_angle', full_name='HighGoal.h_angle', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=31,
  serialized_end=93,
)


_POWERCELLS = _descriptor.Descriptor(
  name='PowerCells',
  full_name='PowerCells',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='confidences', full_name='PowerCells.confidences', index=0,
      number=1, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='angles', full_name='PowerCells.angles', index=1,
      number=2, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=95,
  serialized_end=144,
)

DESCRIPTOR.message_types_by_name['HighGoal'] = _HIGHGOAL
DESCRIPTOR.message_types_by_name['PowerCells'] = _POWERCELLS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

HighGoal = _reflection.GeneratedProtocolMessageType('HighGoal', (_message.Message,), {
  'DESCRIPTOR' : _HIGHGOAL,
  '__module__' : 'robot_server.messages_pb2'
  # @@protoc_insertion_point(class_scope:HighGoal)
  })
_sym_db.RegisterMessage(HighGoal)

PowerCells = _reflection.GeneratedProtocolMessageType('PowerCells', (_message.Message,), {
  'DESCRIPTOR' : _POWERCELLS,
  '__module__' : 'robot_server.messages_pb2'
  # @@protoc_insertion_point(class_scope:PowerCells)
  })
_sym_db.RegisterMessage(PowerCells)


# @@protoc_insertion_point(module_scope)
